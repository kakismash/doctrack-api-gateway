spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      globalcors:
        cors-configurations:
            '[/**]':
              allowedOriginPatterns: # Use allowedOriginPatterns instead of allowedOrigins
                - "http://localhost:4200"  # Example origin
                - "https://your-production-domain.com"  # Add more origins as needed
              allowedMethods:
                - GET
                - POST
                - PUT
                - DELETE
              allowedHeaders:
                - "*"
              allowCredentials: true
      routes:
        - id: login
          uri: lb://auth-service
          predicates:
            - Path=${api.path}${api.version}/auth/login
          filters:
            - name: LoggingFilter
        - id: refresh-token
          uri: lb://auth-service
          predicates:
            - Path=${api.path}${api.version}/auth/refresh-token
          filters:
            - name: LoggingFilter
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=${api.path}${api.version}/auth/**
          filters:
            - name: LoggingFilter
        # Internal service route for any microservice
        - id: generate-internal-service
          uri: lb://auth-service  # Default to auth-service or modify as necessary
          predicates:
            - Path=${api.path}${api.version}/internal-api-key/generate/**  # Assuming internal calls use this path
          filters:
            - name: LoggingFilter  # Optionally log internal requests
        # Internal service route for any microservice
        - id: validate-internal-service
          uri: lb://auth-service  # Default to auth-service or modify as necessary
          predicates:
            - Path=${api.path}${api.version}/internal-api-key/validate/**  # Assuming internal calls use this path
          filters:
            - name: LoggingFilter  # Optionally log internal requests
            - name: InternalServiceAuthFilter  # Custom filter to handle internal requests
              args:
                authValidationUrl: lb://auth-service${api.path}${api.version}/internal-api-key/validate
            # You can add other filters here if needed, or skip auth
        - id: document-service
          uri: lb://document-service
          predicates:
            - Path=${api.path}${api.version}/documents/**
          filters:
            - name: JwtAuthFilter
              args:
                authValidationUrl: lb://auth-service${api.path}${api.version}/auth/validate
        - id: user-service
          uri: lb://auth-service
          predicates:
            - Path=${api.path}${api.version}/users/**
          filters:
            - name: JwtAuthFilter
              args:
                authValidationUrl: lb://auth-service${api.path}${api.version}/auth/validate
        - id: location-service
          uri: lb://location-service
          predicates:
            - Path=${api.path}${api.version}/locations/**
          filters:
            - name: JwtAuthFilter
              args:
                authValidationUrl: lb://auth-service${api.path}${api.version}/auth/validate

eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

api:
  path: /api/
  version: v1

# Server Port
server:
  port: 8080

# Logging
logging:
  level:
    org.springframework.cloud.gateway: DEBUG